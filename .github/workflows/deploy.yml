name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: "."
          fetch-depth: 0
          show-progress: "true"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install npm
        run: |
          npm install

      - name: Build app
        run: |
          npm run build

      - name: Validate files
        run: ls -l

      - name: Save Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: plopster-landing
          path: dist/
          retention-days: 1

  Deployment:
    runs-on: ubuntu-latest
    needs: [Build]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: plopster-landing
          path: dist/

      - name: Validate files
        run: ls -l dist/super-app-forms/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Container Build and Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/plopster-land-img:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/plopster-land-img:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          key_passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/plopster-land-img:latest
            docker stop plopster-land-container || true
            docker rm plopster-land-container || true
            docker run -d --name plopster-land-container -p 8001:80 -v /etc/nginx/sites-available/nicodav.conf:/etc/nginx/conf.d/nicodav.conf ${{ secrets.DOCKER_USERNAME }}/plopster-land-img:latest

      - name: Prune System
        run: "echo y | docker system prune -a"
